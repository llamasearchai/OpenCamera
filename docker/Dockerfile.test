# Multi-stage Docker build for Auto Exposure testing environment
FROM ubuntu:22.04 as base

# Avoid interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    libopencv-dev \
    libspdlog-dev \
    libgtest-dev \
    libgmock-dev \
    lcov \
    gcov \
    valgrind \
    clang-tidy \
    cppcheck \
    python3 \
    python3-pip \
    v4l-utils \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages for analysis
RUN pip3 install \
    numpy \
    matplotlib \
    pandas \
    seaborn \
    jupyter

# Create working directory
WORKDIR /workspace

# Copy source code
COPY . .

# Build stage
FROM base as builder

# Build the project
RUN mkdir -p build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON && \
    make -j$(nproc)

# Test stage
FROM builder as tester

# Copy test scripts
COPY scripts/ scripts/
RUN chmod +x scripts/*.sh

# Set up test environment
ENV GTEST_COLOR=1
ENV GTEST_OUTPUT=xml

# Default command runs all tests
CMD ["./scripts/run_tests.sh"]

# Production test image
FROM base as test-runner

# Copy built binaries and test scripts
COPY --from=builder /workspace/build/ build/
COPY --from=builder /workspace/scripts/ scripts/
RUN chmod +x scripts/*.sh

# Create directories for test results
RUN mkdir -p test_results benchmark_results coverage

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD test -f build/test_auto_exposure || exit 1

# Labels for metadata
LABEL maintainer="opencam-team@example.com"
LABEL description="Auto Exposure Algorithm Test Environment"
LABEL version="1.0"

# Default command
CMD ["./scripts/run_tests.sh", "--with-integration"]